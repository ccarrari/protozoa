0 info it worked if it ends with ok
1 verbose cli [ '/Users/guscost/.nvm/versions/node/v6.9.5/bin/node',
1 verbose cli   '/Users/guscost/.nvm/versions/node/v6.9.5/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@3.10.10
3 info using node@v6.9.5
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   escapedName: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/guscost/code/GitHub/protozoa',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/guscost/.npm/protozoa/1.2.3/package.tgz not in flight; packing
9 verbose correctMkdir /Users/guscost/.npm correctMkdir not in flight; initializing
10 info lifecycle protozoa@1.2.3~prepublish: protozoa@1.2.3
11 silly lifecycle protozoa@1.2.3~prepublish: no script for prepublish, continuing
12 verbose tar pack [ '/Users/guscost/.npm/protozoa/1.2.3/package.tgz',
12 verbose tar pack   '/Users/guscost/code/GitHub/protozoa' ]
13 verbose tarball /Users/guscost/.npm/protozoa/1.2.3/package.tgz
14 verbose folder /Users/guscost/code/GitHub/protozoa
15 verbose addLocalTarball adding from inside cache /Users/guscost/.npm/protozoa/1.2.3/package.tgz
16 verbose correctMkdir /Users/guscost/.npm correctMkdir not in flight; initializing
17 silly cache afterAdd protozoa@1.2.3
18 verbose afterAdd /Users/guscost/.npm/protozoa/1.2.3/package/package.json not in flight; writing
19 verbose correctMkdir /Users/guscost/.npm correctMkdir not in flight; initializing
20 verbose afterAdd /Users/guscost/.npm/protozoa/1.2.3/package/package.json written
21 silly publish { name: 'protozoa',
21 silly publish   version: '1.2.3',
21 silly publish   description: 'a micro-app generator',
21 silly publish   main: 'protozoa.js',
21 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
21 silly publish   repository:
21 silly publish    { type: 'git',
21 silly publish      url: 'git+https://github.com/guscost/protozoa.git' },
21 silly publish   author: { name: 'Gus Cost' },
21 silly publish   license: 'MIT',
21 silly publish   bugs: { url: 'https://github.com/guscost/protozoa/issues' },
21 silly publish   homepage: 'https://guscost.github.io/protozoa',
21 silly publish   readme: '# protozoa\na micro-app generator\n\n![protozoa logo](logo.jpg)\n\n## Usage\nSee [demo](https://guscost.github.io/protozoa) and [demo source](https://github.com/guscost/protozoa/blob/trunk/index.html) for an ES5 example. The `protozoa` package is also available on NPM.\n\nThe protozoa module itself is just one factory function that is called with a template. Calling it looks like this:\n\n```js\nvar element = protozoa({\n  tag: "div",\n  children: [\n    "Hello ",\n    { tag: "strong", children: "world!" }\n  ]\n});\n```\n\n### Template API\nThe template API borrows heavily from [cell](https://www.celljs.org/). All properties are optional:\n- `namespace`: the HTML namespace (`<svg>` is automatic)\n- `tag`: the name of the HTML Node to create, if unspecified it will be a `<div>`\n- `ref`: the name of a property that the parent element can access for convenience\n- `init`: a function to run when the Node is created, with the Node as `this`\n- `children`: a string, number, function, or an array of values or nested templates\n- `ch`: an alias for `children`\n\nThe function returns an ordinary DOM Node with a few additions. You can append this Node anywhere in your HTML page:\n\n```js\ndocument.body.appendChild(element);\n```\n\n### DOM Node API\nContainer DOM Nodes returned by `protozoa` have a special array property `children` which controls the Node\'s contents. Assigning to this property will empty out the containing DOM node and append the new structure in its place:\n\n```js\nelement.children = ["Something Else"];\n```\n\n### Advanced API\nThe template reserves an additional property: `kernel`. This property is used to set or retrieve the immutable recursive kernel function that protozoa uses internally to walk through a nested spec. If you didn\'t understand the previous sentence, you should probably leave it alone.\n\n### Other properties\nThat\'s pretty much it. All other properties are treated as native [IDL attributes](https://developer.mozilla.org/en-US/docs/Web/HTML/Attributes#Content_versus_IDL_attributes) (with preprocessing for `class`, `className` and `style`). Specifying `class` OR `className` will set the Node\'s `class` AND `className` attributes. Style has weird behavior and you can\'t use that property to store arbitrary strings. Anything not used by the browser is fair game for your functions, state objects, or whatever else your Node needs.\n\nSee [demo](https://github.com/guscost/protozoa/blob/trunk/index.html) for an example using a flux-like message bus.\n\n## Concept\nA "micro-app" is a web app that is all of the following:\n- Small (not rendering more than ten thousand items)\n- Composable (able to be controlled and extended via a simple API)\n- Embedded (no model, no viewmodel, no virtual DOM, just the real DOM)\n\n## It\'s just the DOM\nThe micro-app architecture is based on a restriction: All "components" must be DOM Nodes, and all extra functionality must be built into those same objects. With ReactJS every component instance must be linked to a single DOM Node, so why not just start with the DOM Node and build all the component functionality into that? Voila, no more headaches from immutable `value` props, the DOM Node has a value and that\'s all that ever needs to exist. This package should be mostly compatible back to IE9, but if IDL event or attribute compatibility is an issue, you can set up handlers with jQuery in the init() function instead of using those. \n\nRemember back in the day when you could query the DOM and actually *do* something with an element? With this architecture, that\'s how *everything* works!\n\n## Safety not guaranteed\nIf you\'ve worked with the real DOM, you should already know that there are significant pitfalls with any approach. This way is no different. Careful not to overwrite any important attributes with data, because those are your DOM Nodes!\n\nCustom properties on DOM Nodes was looked down on for years probably because of this risk, but we\'re adults and we can be careful.\n\n## The real tradeoff is performance\nA complex UI rendered by emptying out containers and dumping in new DOM Nodes means a lot of screen repaints. This architecture should be chosen with the assumption that apps will be smaller and simpler. The `init()` template API makes it easy to only redraw certain parts of an app in response to any kind of state engine, so a UI built in this way can still be optimized, but sometimes a better solution is to break apart your page into smaller apps that communicate with each other but don\'t need to keep a huge state in sync with a huge UI. More along those lines soon.\n',
21 silly publish   readmeFilename: 'README.md',
21 silly publish   gitHead: 'fdbe3451bf39080f18ae7de5faa6744cb47e82e1',
21 silly publish   _id: 'protozoa@1.2.3',
21 silly publish   _shasum: '037be2365ab249be9f8d9f15297b61561138f236',
21 silly publish   _from: '.' }
22 verbose getPublishConfig undefined
23 silly mapToRegistry name protozoa
24 silly mapToRegistry using default registry
25 silly mapToRegistry registry https://registry.npmjs.org/
26 silly mapToRegistry data Result {
26 silly mapToRegistry   raw: 'protozoa',
26 silly mapToRegistry   scope: null,
26 silly mapToRegistry   escapedName: 'protozoa',
26 silly mapToRegistry   name: 'protozoa',
26 silly mapToRegistry   rawSpec: '',
26 silly mapToRegistry   spec: 'latest',
26 silly mapToRegistry   type: 'tag' }
27 silly mapToRegistry uri https://registry.npmjs.org/protozoa
28 verbose publish registryBase https://registry.npmjs.org/
29 silly publish uploading /Users/guscost/.npm/protozoa/1.2.3/package.tgz
30 verbose request uri https://registry.npmjs.org/protozoa
31 verbose request sending authorization for write operation
32 info attempt registry request try #1 at 2:15:00 AM
33 verbose request using bearer token for auth
34 verbose request id 35eddc6001d3af43
35 http request PUT https://registry.npmjs.org/protozoa
36 http 403 https://registry.npmjs.org/protozoa
37 verbose headers { 'content-type': 'application/json',
37 verbose headers   'cache-control': 'max-age=300',
37 verbose headers   'content-length': '95',
37 verbose headers   'accept-ranges': 'bytes',
37 verbose headers   date: 'Wed, 21 Jun 2017 06:15:01 GMT',
37 verbose headers   via: '1.1 varnish',
37 verbose headers   connection: 'keep-alive',
37 verbose headers   'x-served-by': 'cache-ewr18144-EWR',
37 verbose headers   'x-cache': 'MISS',
37 verbose headers   'x-cache-hits': '0',
37 verbose headers   'x-timer': 'S1498025700.331626,VS0,VE671',
37 verbose headers   vary: 'Accept-Encoding' }
38 verbose request invalidating /Users/guscost/.npm/registry.npmjs.org/protozoa on PUT
39 error publish Failed PUT 403
40 verbose stack Error: "You cannot publish over the previously published version 1.2.3." : protozoa
40 verbose stack     at makeError (/Users/guscost/.nvm/versions/node/v6.9.5/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:302:12)
40 verbose stack     at CachingRegistryClient.<anonymous> (/Users/guscost/.nvm/versions/node/v6.9.5/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:290:14)
40 verbose stack     at Request._callback (/Users/guscost/.nvm/versions/node/v6.9.5/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:210:14)
40 verbose stack     at Request.self.callback (/Users/guscost/.nvm/versions/node/v6.9.5/lib/node_modules/npm/node_modules/request/request.js:187:22)
40 verbose stack     at emitTwo (events.js:106:13)
40 verbose stack     at Request.emit (events.js:191:7)
40 verbose stack     at Request.<anonymous> (/Users/guscost/.nvm/versions/node/v6.9.5/lib/node_modules/npm/node_modules/request/request.js:1048:10)
40 verbose stack     at emitOne (events.js:96:13)
40 verbose stack     at Request.emit (events.js:188:7)
40 verbose stack     at IncomingMessage.<anonymous> (/Users/guscost/.nvm/versions/node/v6.9.5/lib/node_modules/npm/node_modules/request/request.js:969:12)
41 verbose statusCode 403
42 verbose pkgid protozoa
43 verbose cwd /Users/guscost/code/GitHub/protozoa
44 error Darwin 16.6.0
45 error argv "/Users/guscost/.nvm/versions/node/v6.9.5/bin/node" "/Users/guscost/.nvm/versions/node/v6.9.5/bin/npm" "publish"
46 error node v6.9.5
47 error npm  v3.10.10
48 error code E403
49 error "You cannot publish over the previously published version 1.2.3." : protozoa
50 error If you need help, you may report this error at:
50 error     <https://github.com/npm/npm/issues>
51 verbose exit [ 1, true ]
